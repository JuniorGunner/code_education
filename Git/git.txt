10/05/2021 - 14h15

# Padrões e Técnicas avançadas de Git e GitHub

* GitFlow;
* Configurações das branches;
* Pull Requests / Templates para PR;
* Code Review;
* Plugin do VSCode;
* CODEOWNERS;
* SemVer - Semantical Versioning;
* Conventional Commits;


# Iniciando com GitFlow

* Master/Main;
* Hotfix;
* Release;
* Develop; 
* Feature/x;
* Feature/y;
* GitHub GitFlow extension (https://github.com/petervanderdoes/gitflow-avh/wiki/Installation);

* $ git flow - mostra opções;
* $ git flow init - define nomes das branches e prefixo de tags;
* $ git flow feature start <feature_name>;
* $ git flow feature finish <feature_name> - faz merge na develop, remove a branch feat e 
	faz checkout pra develop;
* $ git flow release start 0.1.0;
* $ git flow release finish 0.1.0 - faz merge no master, adiciona tag e faz merge no
	develop (caso haja mudança de última hora no branch release);
* $ git flow hotfix start <fix_name>;
* $ git flow hotfix finish <fix_name> - faz merge no master, cria uma nova tag e faz
	merge na develop;


# Assinatura de Commits

* Chaves privada e pública;
* apg-get install gpg;
* gpg --list-secret-key --keyid-form LONG;
* gpg --full-generate-key - default(1);
* gpg --armor --export <key_id>;
* Copia endereço gerado / GitHub / Configurações / SSH e GPG keys / add key;
* git config --global user.signingkey <key_id>;
* export GPG_TTY=$(tty) - add in nano ./bash_profile;
* git config commit.gpgsign true - assina somente um repositório;
* git config --global commit.gpgsign true - assina todos repositórios;
* git config --global commit.gpgSign true - assina tags;
* git log --show-signature -1;
* nano /.gnupg/gpg.conf / use-agent / CTRL+s / $ gpgconf --launch gpg-agent:
	- salva senha;
* gpg --edit-key <key_id> / $ adduid / name/email - adicionar novo e-mail na assinatura;
* $ uid 2 / trust / 5 / y / $ save;


# PRs e Codereview


